package com.google.zetasql.toolkit.antipattern.parser;

import com.google.zetasql.LanguageOptions;
import com.google.zetasql.Parser;
import com.google.zetasql.parser.ASTNodes;
import org.junit.Before;
import org.junit.Test;

import static org.junit.Assert.assertEquals;

public class IdentifySelfJoinTest {

    LanguageOptions languageOptions;

    @Before
    public void setUp() {
        languageOptions = new LanguageOptions();
        languageOptions.enableMaximumLanguageFeatures();
        languageOptions.setSupportsAllStatementKinds();
    }

    @Test
    public void selfJoinNormalTest() {
        String expected = "Instead of using a self-join at line 9, use a window (analytic) function to reduce the number of additional bytes that are generated by the query.";
        String query =
                        "SELECT \n" +
                        "    t1.dt,\n" +
                        "    t1.taxi_id,\n" +
                        "    t1.ct,\n" +
                        "    t2.ct ct_prev_day\n" +
                        "  FROM \n" +
                        "    `bigquery-public-data.chicago_taxi_trips.taxi_trips` t1\n" +
                        "  LEFT JOIN\n" +
                        "    `bigquery-public-data.chicago_taxi_trips.taxi_trips` t2 \n" +
                        "      ON DATE(t2.dt) = DATE(t1.dt) - INTERVAL 1 DAY\n" +
                        "      AND t1.taxi_id = t2.taxi_id\n" +
                        "  ORDER BY\n" +
                        "    dt desc,\n" +
                        "    taxi_id desc\n" +
                        "  ;\n";
        ASTNodes.ASTStatement parsedQuery = Parser.parseStatement(query, languageOptions);
        String recommendations = (new IdentifySelfJoin().run(parsedQuery, query));
        assertEquals(expected, recommendations);
    }
    @Test
    public void subQuerySelfJoinTest() {
        String expected = "Instead of using a self-join at line 9, use a window (analytic) function to reduce the number of additional bytes that are generated by the query.";
        String query =
                "SELECT \n" +
                        "    t1.dt,\n" +
                        "    t1.taxi_id,\n" +
                        "    t1.ct,\n" +
                        "    t2.ct ct_prev_day\n" +
                        "  FROM \n" +
                        "    `bigquery-public-data.chicago_taxi_trips.taxi_trips` t1\n" +
                        "  LEFT JOIN\n" +
                        "    (select * from `bigquery-public-data.chicago_taxi_trips.taxi_trips`) t2 \n" +
                        "      ON DATE(t2.dt) = DATE(t1.dt) - INTERVAL 1 DAY\n" +
                        "      AND t1.taxi_id = t2.taxi_id\n" +
                        "  ORDER BY\n" +
                        "    dt desc,\n" +
                        "    taxi_id desc\n" +
                        "  ;\n";
        ASTNodes.ASTStatement parsedQuery = Parser.parseStatement(query, languageOptions);
        String recommendations = (new IdentifySelfJoin().run(parsedQuery, query));
        assertEquals(expected, recommendations);
    }

}