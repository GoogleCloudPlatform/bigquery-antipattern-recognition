id,recommendation
/usr/local/google/home/whaite/dev/bigquery-antipattern-tool/bigquery-antipattern-recognition/samples/queries/input/orderByWithoutLimit.sql,"OrderByWithoutLimit: ORDER BY clause without LIMIT at line 24."
/usr/local/google/home/whaite/dev/bigquery-antipattern-tool/bigquery-antipattern-recognition/samples/queries/input/latestRecord.sql,"LatestRecordWithAnalyticFun: Seems like you might be using analytical function row_number in line 23 to filter the latest record in line 28."
/usr/local/google/home/whaite/dev/bigquery-antipattern-tool/bigquery-antipattern-recognition/samples/queries/input/dynamicPredicate.sql,"DynamicPredicate: Using subquery in filter at line 23. Converting this dynamic predicate to static might provide better performance."
/usr/local/google/home/whaite/dev/bigquery-antipattern-tool/bigquery-antipattern-recognition/samples/queries/input/stringComparison.sql,"StringComparison: REGEXP_CONTAINS at line 22. Prefer LIKE when the full power of regex is not needed (e.g. wildcard matching)."
/usr/local/google/home/whaite/dev/bigquery-antipattern-tool/bigquery-antipattern-recognition/samples/queries/input/whereOrder.sql,"WhereOrder: SubOptimal order of predicates in WHERE, line 23. Consider applying more restrictive filters first. For example a '=' or a '>' filter usually is usually more restrictive than a like '%' filter. The following order might provide performance benefits is '=', '>', '<', '<>', 'like'"
/usr/local/google/home/whaite/dev/bigquery-antipattern-tool/bigquery-antipattern-recognition/samples/queries/input/multipleCTEs.sql,"CTEsEvalMultipleTimes: CTE with multiple references: alias a defined at line 17 is referenced 2 times."
/usr/local/google/home/whaite/dev/bigquery-antipattern-tool/bigquery-antipattern-recognition/samples/queries/input/selectStar.sql,"SimpleSelectStar: SELECT * on table: bigquery-public-data. Check that all columns are needed."
/usr/local/google/home/whaite/dev/bigquery-antipattern-tool/bigquery-antipattern-recognition/samples/queries/input/subqueryInFilterWithoutAgg.sql,"SemiJoinWithoutAgg: Subquery in filter without aggregation at line 23.
DynamicPredicate: Using subquery in filter at line 23. Converting this dynamic predicate to static might provide better performance."
